service: petrealm

plugins:
  - serverless-offline

custom:
  dotenv:
    path: .env

package:
  individually: true
  include:
    - backend/**
  exclude:
    - node_modules/**
    - .env
    - .git/**
    - README.md

functions:
  getAllPets:
    handler: backend/src/services/pet-handler.getAllPets
    events:
      - http:
          path: pets
          method: get
          cors: true
  getPetById:
    handler: backend/src/services/pet-handler.getPetById
    events:
      - http:
          path: pets/{id}
          method: get
          cors: true
  addPet:
    handler: backend/src/services/pet-handler.addPet
    events:
      - http:
          path: pets
          method: post
          cors: true
  feedPet:
    handler: backend/src/services/pet-handler.feedPet
    events:
      - http:
          path: pets/{id}/feed
          method: post
          cors: true

  releasePet:
    handler: backend/src/services/pet-handler.releasePet
    events:
      - http:
          path: pets/{id}
          method: delete
          cors: true

  hungerDecay:
    handler: backend/src/services/hunger-decay.handler
    events:
      - schedule:
          rate: rate(1 hour)

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-2
  deploymentBucket:
    name: petrealm-serverless-deployments
  environment:
    DB_HOST: pets.c1asi2ku8ijs.us-east-2.rds.amazonaws.com
    DB_PORT: 5432
    DB_DATABASE: pets
    DB_USER: petslogin
    DB_PASSWORD: cYo4oGdBnbQJQqAFC5kN
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "logs:DescribeLogStreams"
        - "logs:CreateLogStream"
        - "logs:PutLogEvents"
        - "rds:*"
        - "cloudwatch:*"
      Resource: "arn:aws:logs:us-east-2:*:*"
